name: ray_cluster_depthpro

volumes:
  ray_tmp:
  grafana_storage:
  depthpro_data:  # 绑定 /mnt/object 目录
    external: true
  depthpro_code:  # 绑定 /home/jovyan/workspace/ML-Sys-DevOps/mlflow-scripts
    external: true

services:

  minio-create-bucket:
    image: minio/mc
    depends_on:
      - ray-head
    entrypoint: >
      /bin/sh -c "
      mc alias set mlflow-minio http://129.114.24.214:9000 mlflowadmin mlflowpass &&
      if ! mc ls mlflow-minio/ray; then
        mc mb mlflow-minio/ray &&
        echo 'Bucket ray created for ray checkpoints';
      else
        echo 'Bucket ray already exists';
      fi"

  ray-head:
    image: rayproject/ray:2.42.1
    container_name: ray-head
    command: >
      /bin/sh -c "
      mkdir -p /tmp/ray &&
      chown -R root:root /tmp/ray &&
      ray metrics launch-prometheus &&
      ray start --head --port=6379 --dashboard-host=0.0.0.0 --block --metrics-export-port=8080"
    ports:
      - "6379:6379"
      - "8265:8265"
      - "8080:8080"
      - "8090:8090"
      - "9090:9090"
    shm_size: '12g'
    volumes:
      - ray_tmp:/tmp/ray
    environment:
      - RAY_GRAFANA_HOST=http://grafana:3000
      - RAY_GRAFANA_IFRAME_HOST=http://${RAY_HOST_IP}:3000  # ✅ 需要在运行前 export RAY_HOST_IP
      - RAY_PROMETHEUS_HOST=http://ray-head:9090
      - RAY_PROMETHEUS_NAME=Prometheus
      - AWS_ACCESS_KEY_ID=mlflowadmin
      - AWS_SECRET_ACCESS_KEY=mlflowpass
      - AWS_ENDPOINT_URL=http://129.114.24.214:9000

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    entrypoint: >
      /bin/sh -c "
      while [ ! -f /tmp/ray/session_latest/metrics/grafana/grafana.ini ]; do
        echo 'Waiting for Grafana config...'; sleep 2; done;
      /run.sh --config /tmp/ray/session_latest/metrics/grafana/grafana.ini"
    ports:
      - "3000:3000"
    volumes:
      - grafana_storage:/var/lib/grafana
      - ray_tmp:/tmp/ray:ro
    environment:
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      - GF_PATHS_PROVISIONING=/tmp/ray/session_latest/metrics/grafana/provisioning
      - GF_SERVER_HTTP_ADDR=0.0.0.0
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_PROXY_ENABLED=true
      - GF_AUTH_PROXY_AUTO_SIGN_UP=true
    depends_on:
      - ray-head

  ray-worker-1:
    image: rayproject/ray:2.42.1-gpu
    container_name: ray-worker-depthpro-0
    command: ["ray", "start", "--address=ray-head:6379", "--num-cpus=32", "--num-gpus=1", "--block"]
    deploy:
      resources:
        reservations:
          devices:
            - driver: "nvidia"
              capabilities: ["gpu"]
              device_ids: ["0"]
    environment:
      - AWS_ACCESS_KEY_ID=mlflowadmin
      - AWS_SECRET_ACCESS_KEY=mlflowpass
      - AWS_ENDPOINT_URL=http://129.114.24.214:9000
    shm_size: '12g'
    volumes:
      - depthpro_data:/mnt
      - depthpro_code:/workspace/mlflow-scripts
    depends_on:
      - ray-head

  ray-worker-2:
    image: rayproject/ray:2.42.1-gpu
    container_name: ray-worker-depthpro-1
    command: ["ray", "start", "--address=ray-head:6379", "--num-cpus=32", "--num-gpus=1", "--block"]
    deploy:
      resources:
        reservations:
          devices:
            - driver: "nvidia"
              capabilities: ["gpu"]
              device_ids: ["1"]
    environment:
      - AWS_ACCESS_KEY_ID=mlflowadmin
      - AWS_SECRET_ACCESS_KEY=mlflowpass
      - AWS_ENDPOINT_URL=http://129.114.24.214:9000
    shm_size: '12g'
    volumes:
      - depthpro_data:/mnt
      - depthpro_code:/workspace/mlflow-scripts
    depends_on:
      - ray-head
