volumes:
  sr:

services:
  extract-data:
    container_name: etl_extract_data
    image: python:3.11
    user: root
    volumes:
      - sr:/data
    working_dir: /data
    command: >
      bash -c "set -e
               # download & unpack HR
               for f in DIV2K_train_HR DIV2K_valid_HR; do
                 url=https://data.vision.ee.ethz.ch/cvl/DIV2K/$$f.zip
                 curl -L \"$$url\" -o $$f.zip
                 unzip -q $$f.zip && rm $$f.zip
               done

               # download & unpack LR ×4
               for f in DIV2K_train_LR_bicubic_X4 DIV2K_valid_LR_bicubic_X4; do
                 url=https://data.vision.ee.ethz.ch/cvl/DIV2K/$$f.zip
                 curl -L \"$$url\" -o $$f.zip
                 unzip -q $$f.zip && rm $$f.zip
               done

               echo '>>> /data now contains:' 
               ls -lhR /data
      "

  transform-data:
    image: python:3.11
    user: root
    volumes:
      - sr:/data
    working_dir: /data
    # clear any entrypoint so we get bash
    entrypoint: []
    command: >
      bash -e <<\EOF
        mkdir -p SR/div2k/{hr,lr,train,validation}

        # move HR
        mv DIV2K_train_HR/*        SR/div2k/train/
        mv DIV2K_valid_HR/*        SR/div2k/validation/

        # move LR
        mv DIV2K_train_LR_bicubic/* SR/div2k/lr/
        mv DIV2K_valid_LR_bicubic/* SR/div2k/lr/

        echo '>>> final SR/div2k tree:'
        ls -lhR SR/div2k
      EOF

  load-data:
    container_name: etl_load_data
    image: rclone/rclone:latest
    user: root
    volumes:
      - sr:/data                             # ← your shared volume
      - ~/.config/rclone/rclone.conf:/root/.config/rclone/rclone.conf:ro
    entrypoint: ["/bin/sh","-c"]
    command: |
      #!/bin/sh
      set -e

      if [ -z "$RCLONE_CONTAINER" ]; then
        echo "ERROR: RCLONE_CONTAINER is not set"
        exit 1
      fi

      echo "Cleaning up any existing remote data in $RCLONE_CONTAINER…"
      rclone delete chi_tacc:"$RCLONE_CONTAINER" --rmdirs || true

      echo "Uploading local /data/SR → chi_tacc:$RCLONE_CONTAINER …"
      rclone copy /data/SR chi_tacc:"$RCLONE_CONTAINER" \
        --progress \
        --transfers=32 \
        --checkers=16 \
        --multi-thread-streams=4 \
        --fast-list

      echo "Remote directories after load:"
      rclone lsd chi_tacc:"$RCLONE_CONTAINER"